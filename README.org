[[https://opensource.org/licenses/BSD-2-Clause][https://img.shields.io/badge/license-BSD-blue.svg]]
[[https://melpa.org/#/erc-crypt][https://melpa.org/packages/erc-crypt-badge.svg]]
[[http://stable.melpa.org/#/erc-crypt][https://stable.melpa.org/packages/erc-crypt-badge.svg]]

erc-crypt.el is a minor mode for ERC that provides PSK encryption.

Encryption can be enabled/disabled on a per buffer basis.

* Features
- Uses external OpenSSL binary for encrypt/decrypt
- Visual in-buffer indicator for errors and encrypted messages
  sent/received
- Auto splits ciphertext in order to get around IRC message limits.
  Original formatting is preserved, no information is lost.
- Messages are padded to constant size

* Todo
+ Move to GnuPG for symmetric encryption (and customizable key
  derivation from passphrase)
+ Use OpenSSL for DH key generation
+ Fully automated authenticated DH key exchange

* Crypto

erc-crypt.el should be seen as a proof-of-concept and serve as HOWTO-code
in terms of developing similar minor modes for ERC. It does NOT offer
strong cryptography, do NOT use this if that is what you need!

* Install
Simple and most flexible method:

#+BEGIN_SRC emacs-lisp
;; Clone this repository, ensure directory of erc-crypt.el is in your
;; load-path and add the following to your init file:
(require 'erc-crypt)
#+END_SRC

Alternatively, you can install through [[https://melpa.org/][MELPA]] or some other Emacs package
manager.

* Usage
Interactively

#+BEGIN_SRC emacs-lisp
M-x erc-crypt-enable  ; Enable encryption for the current ERC buffer
M-x erc-crypt-disable ; Disable encryption for the current ERC buffer
M-x erc-crypt-set-key ; Set/change key for current ERC buffer
#+END_SRC

* License
The code comes with a BSD-style license so you can basically do with it
whatever you want.

* Author
xristos (AT) sdf (DOT) org
